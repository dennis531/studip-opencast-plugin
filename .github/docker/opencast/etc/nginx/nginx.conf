
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;
    
    # Do not send the nginx version number in error pages and Server header
    server_tokens off;
    
    server {
    
        listen 8081;
        
        # Only send the shortened referrer to a foreign origin, full referrer
        # to a local host
        # https://infosec.mozilla.org/guidelines/web_security#referrer-policy
        add_header Referrer-Policy strict-origin-when-cross-origin;
        
        # Basic open CORS for everyone
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Headers 'Origin,Content-Type,Accept,Authorization' always;
        
        # Always respond with 200 to OPTIONS requests as browsers do not accept
        # non-200 responses to CORS preflight requests.
        if ($request_method = OPTIONS) {
            return 200;
        }
        
        # Accept large ingests
        client_max_body_size 0;
    
        location / {
        
            proxy_set_header        Host $host:8081;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        
            proxy_pass http://127.0.0.1:8080;
            
            proxy_cookie_path / "/; HTTPOnly; Secure";
            
            
            # Do not buffer responses
            proxy_buffering         off;

            # Do not buffer requests
            proxy_request_buffering off;
        }
    }
}
